name: Run Tests and Generate Coverage

on:
  pull_request:
    branches:
      - master
      - dev

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 bandit pytest

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Generate Audit Report
      run: |
        echo "## Code Audit Report" > audit_report.md
        echo "### Linting Results" >> audit_report.md
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics >> audit_report.md || true
        echo "\n### Security Audit Results" >> audit_report.md || true
        bandit -r . >> audit_report.md || true
        echo "\n### Test Results" >> audit_report.md || true
        pytest --maxfail=10 --disable-warnings -q >> audit_report.md || true

    - name: Post Audit Report to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('audit_report.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });

    - name: Upload Audit Report
      uses: actions/upload-artifact@v2
      with:
        name: audit-report
        path: audit_report.md
